import { type NextRequest, NextResponse } from "next/server"

const TELEGRAM_BOT_TOKEN = "7785729507:AAFoohIH3fKhat80-amStmoLvYO9KNd27Z4"
const TELEGRAM_CHAT_ID = "@innosoft_2"

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()

    const { type, name, phone, email, service, message, company } = body

    // Validate required fields
    if (!name || !phone) {
      return NextResponse.json({ error: "–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è" }, { status: 400 })
    }

    let telegramMessage = ""

    if (type === "service") {
      // Service order format
      telegramMessage = `
üéØ –ó–ê–ö–ê–ó –£–°–õ–£–ì–ò –° –°–ê–ô–¢–ê sayt-tashkent.uz

üî• –£—Å–ª—É–≥–∞: ${service}
üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìß Email: ${email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
üè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${company || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
üìù –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${message || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

‚è∞ –í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU", { timeZone: "Asia/Tashkent" })}
      `.trim()
    } else {
      // Regular order format
      telegramMessage = `
üî• –ù–û–í–´–ô –ó–ê–ö–ê–ó –° –°–ê–ô–¢–ê sayt-tashkent.uz

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìß Email: ${email || "–ù–µ —É–∫–∞–∑–∞–Ω"}
üåê –¢–∏–ø —Å–∞–π—Ç–∞: ${service || "–ù–µ –≤—ã–±—Ä–∞–Ω"}
üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ${message || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

‚è∞ –í—Ä–µ–º—è –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU", { timeZone: "Asia/Tashkent" })}
      `.trim()
    }

    // Send to Telegram
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`

    const telegramResponse = await fetch(telegramUrl, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: telegramMessage,
        parse_mode: "HTML",
      }),
    })

    if (!telegramResponse.ok) {
      console.error("Telegram API error:", await telegramResponse.text())
      return NextResponse.json({ error: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è" }, { status: 500 })
    }

    return NextResponse.json({
      success: true,
      message: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
    })
  } catch (error) {
    console.error("Error sending order:", error)
    return NextResponse.json({ error: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–∫–∞–∑–∞" }, { status: 500 })
  }
}
